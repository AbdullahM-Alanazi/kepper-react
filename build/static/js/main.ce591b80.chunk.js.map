{"version":3,"sources":["components/header/Header.jsx","components/body/Note.jsx","components/footer/Footer.jsx","components/body/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Note","title","content","index","deleteNote","className","onClick","currentYear","Date","getFullYear","Footer","CreateArea","addNewNote","useState","Focus","setFocus","note","setNote","handleNote","event","value","target","name","onSubmit","preventDefault","placeholder","onChange","rows","Zoom","in","Fab","type","App","notes","setNotes","indexToDelete","preValue","filter","newNote","map","i","key","ReactDom","render","document","getElementById"],"mappings":"+PAaeA,MAVf,WACE,OACE,gCACE,4BACE,kBAAC,IAAD,MADF,Y,iBCYSC,MAff,YAAsD,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WACrC,OACE,yBAAKC,UAAU,QACb,4BAAKJ,GACL,2BAAIC,GAKJ,4BAAQI,QAAS,kBAAMF,EAAWD,KAChC,kBAAC,IAAD,SCXJI,GAAc,IAAIC,MAAOC,cAQdC,MAPf,WACE,OACE,gCACE,wCAAcH,K,gDC0DLI,MA3Df,YAAqC,IAAfC,EAAc,EAAdA,WACpB,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,CAC/BZ,MAAO,GACPC,QAAS,KAFX,mBAAOc,EAAP,KAAaC,EAAb,KAMA,SAASC,EAAWC,GAClB,IAAMC,EAAQD,EAAME,OAAOD,MACrBE,EAAOH,EAAME,OAAOC,KAE1BL,EAAQ,2BACHD,GADE,kBAEJM,EAAOF,KAIZ,OACE,oCACE,0BACEf,UAAU,cACVkB,SAAU,SAACJ,GACTA,EAAMK,iBAENZ,EAAWI,GAEXC,EAAQ,CACNhB,MAAO,GACPC,QAAS,OAGZY,GACC,2BACEQ,KAAK,QACLG,YAAY,QACZC,SAAUR,EACVE,MAAOJ,EAAKf,QAGhB,8BACEqB,KAAK,UACLG,YAAY,iBACZE,KAAMb,EAAQ,IAAM,IACpBY,SAAUR,EACVE,MAAOJ,EAAKd,QACZI,QAAS,kBAAMS,GAAS,MAG1B,kBAACa,EAAA,EAAD,CAAMC,GAAIf,GACR,kBAACgB,EAAA,EAAD,CAAKC,KAAK,UACR,kBAAC,IAAD,WClDG,SAASC,IAEtB,MAA0BnB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KAMA,SAAS9B,EAAW+B,GAClBD,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAAClC,GACtB,OAAOA,IAAUgC,QAIvB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYvB,WAdhB,SAAoB0B,GAElBJ,EAAS,GAAD,mBAAKD,GAAL,CAAYK,QAajBL,EAAMM,KAAI,SAACvB,EAAMwB,GAAP,OACT,kBAAC,EAAD,CACEC,IAAKD,EACLrC,MAAOqC,EACPvC,MAAOe,EAAKf,MACZC,QAASc,EAAKd,QACdE,WAAYA,OAGhB,kBAAC,EAAD,OC9BNsC,IAASC,OACL,kBAACX,EAAD,MACAY,SAASC,eAAe,W","file":"static/js/main.ce591b80.chunk.js","sourcesContent":["import React from \"react\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <HighlightIcon />\n        Kepper\n      </h1>\n    </header>\n  );\n}\nexport default Header;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Note({ title, content, index, deleteNote }) {\n  return (\n    <div className='note'>\n      <h1>{title}</h1>\n      <p>{content}</p>\n      {/* \n      Assign a unique index to each note component, \n      When clicking on the delete button, call a parent function to delete this note by index. \n      **/}\n      <button onClick={() => deleteNote(index)}>\n        <DeleteIcon />\n      </button>\n    </div>\n  );\n}\nexport default Note;\n","import React from \"react\";\n\nlet currentYear = new Date().getFullYear();\nfunction Footer() {\n  return (\n    <footer>\n      <p>copyright {currentYear}</p>\n    </footer>\n  );\n}\nexport default Footer;\n","import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea({ addNewNote }) {\n  const [Focus, setFocus] = useState(false);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  //* Single note object handler.\n  function handleNote(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n    //* Change the given property name, remaining the rest of the fields unchanged.\n    setNote({\n      ...note,\n      [name]: value,\n    });\n  }\n\n  return (\n    <>\n      <form\n        className='create-note'\n        onSubmit={(event) => {\n          event.preventDefault();\n          // * Parent function.\n          addNewNote(note);\n          // * Clear the initialState.\n          setNote({\n            title: \"\",\n            content: \"\",\n          });\n        }}>\n        {Focus && (\n          <input\n            name='title'\n            placeholder='Title'\n            onChange={handleNote}\n            value={note.title}\n          />\n        )}\n        <textarea\n          name='content'\n          placeholder='Take a note...'\n          rows={Focus ? \"3\" : \"1\"}\n          onChange={handleNote}\n          value={note.content}\n          onClick={() => setFocus(true)}\n        />\n\n        <Zoom in={Focus}>\n          <Fab type='submit'>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./header/Header\";\nimport Note from \"./body/Note\";\nimport Footer from \"./footer/Footer\";\nimport CreateArea from \"./body/CreateArea\";\n\nexport default function App() {\n  // Initialize a state of type array\n  const [notes, setNotes] = useState([]); //[Notes]: {title, content}\n  // Function to add a new note\n  function addNewNote(newNote) {\n    // note is an object of two property\n    setNotes([...notes, newNote]);\n  }\n  function deleteNote(indexToDelete) {\n    setNotes((preValue) => {\n      return preValue.filter((index) => {\n        return index !== indexToDelete;\n      });\n    });\n  }\n  return (\n    <>\n      <Header />\n      <CreateArea addNewNote={addNewNote} />\n      {notes.map((note, i) => (\n        <Note\n          key={i}\n          index={i}\n          title={note.title}\n          content={note.content}\n          deleteNote={deleteNote}\n        />\n      ))}\n      <Footer />\n    </>\n  );\n}\n","//1. Create a new React app. !\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from './components/App';\nReactDom.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}